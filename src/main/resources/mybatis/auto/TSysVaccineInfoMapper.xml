<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.test.mapper.auto.TSysVaccineInfoMapper">
  <resultMap id="BaseResultMap" type="com.fc.test.model.auto.TSysVaccineInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="vaccine_name" jdbcType="VARCHAR" property="vaccineName" />
    <result column="approval_number" jdbcType="VARCHAR" property="approvalNumber" />
    <result column="production_number" jdbcType="VARCHAR" property="productionNumber" />
    <result column="production_date" jdbcType="DATE" property="productionDate" />
    <result column="effective_date" jdbcType="DATE" property="effectiveDate" />
    <result column="factory_name" jdbcType="VARCHAR" property="factoryName" />
    <result column="inventory" jdbcType="VARCHAR" property="inventory" />
    <result column="is_overdue" jdbcType="INTEGER" property="isOverdue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, vaccine_name, approval_number, production_number, production_date, effective_date, 
    factory_name, inventory, is_overdue
  </sql>
  <select id="selectByExample" parameterType="com.fc.test.model.auto.TSysVaccineInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sys_vaccine_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_sys_vaccine_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_sys_vaccine_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.test.model.auto.TSysVaccineInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_sys_vaccine_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.test.model.auto.TSysVaccineInfo">
    insert into t_sys_vaccine_info (id,vaccine_name, approval_number, production_number,
      production_date, effective_date, factory_name, 
      inventory, is_overdue)
    values (#{id,jdbcType=VARCHAR}, #{vaccineName,jdbcType=VARCHAR}, #{approvalNumber,jdbcType=VARCHAR}, #{productionNumber,jdbcType=VARCHAR},
      #{productionDate,jdbcType=DATE}, #{effectiveDate,jdbcType=DATE}, #{factoryName,jdbcType=VARCHAR}, 
      #{inventory,jdbcType=VARCHAR}, #{isOverdue,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fc.test.model.auto.TSysVaccineInfo">
    insert into t_sys_vaccine_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="vaccineName != null">
        vaccine_name,
      </if>
      <if test="approvalNumber != null">
        approval_number,
      </if>
      <if test="productionNumber != null">
        production_number,
      </if>
      <if test="productionDate != null">
        production_date,
      </if>
      <if test="effectiveDate != null">
        effective_date,
      </if>
      <if test="factoryName != null">
        factory_name,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="isOverdue != null">
        is_overdue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="vaccineName != null">
        #{vaccineName,jdbcType=VARCHAR},
      </if>
      <if test="approvalNumber != null">
        #{approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="productionNumber != null">
        #{productionNumber,jdbcType=VARCHAR},
      </if>
      <if test="productionDate != null">
        #{productionDate,jdbcType=DATE},
      </if>
      <if test="effectiveDate != null">
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="factoryName != null">
        #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=VARCHAR},
      </if>
      <if test="isOverdue != null">
        #{isOverdue,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.test.model.auto.TSysVaccineInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_sys_vaccine_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_sys_vaccine_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.vaccineName != null">
        vaccine_name = #{record.vaccineName,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalNumber != null">
        approval_number = #{record.approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productionNumber != null">
        production_number = #{record.productionNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.productionDate != null">
        production_date = #{record.productionDate,jdbcType=DATE},
      </if>
      <if test="record.effectiveDate != null">
        effective_date = #{record.effectiveDate,jdbcType=DATE},
      </if>
      <if test="record.factoryName != null">
        factory_name = #{record.factoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=VARCHAR},
      </if>
      <if test="record.isOverdue != null">
        is_overdue = #{record.isOverdue,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_sys_vaccine_info
    set id = #{record.id,jdbcType=VARCHAR},
      vaccine_name = #{record.vaccineName,jdbcType=VARCHAR},
      approval_number = #{record.approvalNumber,jdbcType=VARCHAR},
      production_number = #{record.productionNumber,jdbcType=VARCHAR},
      production_date = #{record.productionDate,jdbcType=DATE},
      effective_date = #{record.effectiveDate,jdbcType=DATE},
      factory_name = #{record.factoryName,jdbcType=VARCHAR},
      inventory = #{record.inventory,jdbcType=VARCHAR},
      is_overdue = #{record.isOverdue,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fc.test.model.auto.TSysVaccineInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_sys_vaccine_info
    <set>
      <if test="vaccineName != null">
        vaccine_name = #{vaccineName,jdbcType=VARCHAR},
      </if>
      <if test="approvalNumber != null">
        approval_number = #{approvalNumber,jdbcType=VARCHAR},
      </if>
      <if test="productionNumber != null">
        production_number = #{productionNumber,jdbcType=VARCHAR},
      </if>
      <if test="productionDate != null">
        production_date = #{productionDate,jdbcType=DATE},
      </if>
      <if test="effectiveDate != null">
        effective_date = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="factoryName != null">
        factory_name = #{factoryName,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=VARCHAR},
      </if>
      <if test="isOverdue != null">
        is_overdue = #{isOverdue,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fc.test.model.auto.TSysVaccineInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_sys_vaccine_info
    set vaccine_name = #{vaccineName,jdbcType=VARCHAR},
      approval_number = #{approvalNumber,jdbcType=VARCHAR},
      production_number = #{productionNumber,jdbcType=VARCHAR},
      production_date = #{productionDate,jdbcType=DATE},
      effective_date = #{effectiveDate,jdbcType=DATE},
      factory_name = #{factoryName,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=VARCHAR},
      is_overdue = #{isOverdue,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>